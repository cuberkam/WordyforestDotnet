@model VocabulariesList
@{
    ViewData["Title"] = "Edit Vocabulary List";
}

<h1>Edit - @Model.Name</h1>

<div class="container mt-4">
    <div class="row">
        <div class="col-md-6 border p-3">
			<input id="vocabularies-list-id" type="hidden" value="@Model.Id" />
            <h2>Added Vocabularies</h2>
            <hr />
            <div id="added-vocabularies" class="overflow-auto" style="max-height: 60vh;">
            @if (Model != null && Model.Vocabularies != null)
            {
                @foreach (var vocabulary in Model.Vocabularies)
                {
                    <div class="d-flex justify-content-between align-items-center border p-3 m-2">
                            <div><b>@vocabulary.Word</b><br /><b>Description: </b>@vocabulary.Description</div>
                            <button class="btn btn-danger m-lg-2" onclick="removeItem(@Model.Id, @vocabulary.Id, this)">Remove</button>
                    </div>
                }
            }
            </div>
        </div>
        <div id="search-vocabularies" class="col-md-6 border p-3">
            <h2>Search</h2>
            <hr />
            
            <input type="text" id="search-input"/>
            <button class="btn btn-primary" onclick="searchItems()">Search</button>
            <div id="search-results" class="overflow-auto" style="max-height: 60vh;"></div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        async function searchItems() {
            const modelId = document.getElementById("vocabularies-list-id").value;
            const query = document.getElementById("search-input").value;
            const res = await fetch(`/api/vocabularies/search?word=${encodeURIComponent(query)}&vocabulariesListId=${encodeURIComponent(modelId)}`);
            const data = await res.json();

            const list = document.getElementById("search-results");
            list.innerHTML = "";
            data.$values.forEach(item => {
                list.innerHTML +=`<div id="VocabularyList" class="d-flex justify-content-between align-items-center border p-3 m-2">
                        <div><b>${item.word}</b><br/><b>Description: </b>${item.description}</div>
                        <button class="btn btn-primary m-lg-2" onclick="addItem(${modelId},${item.id}, this)">Add</button>
                    </div>`;
            });
        }

        async function addItem(vocabulariesListId, vocabularyId, btn) {
            const res = await fetch("/api/vocabularies/add", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                    vocabulariesListId: vocabulariesListId,
                    vocabularyId: vocabularyId
                })
            });

            if (res.ok) {
                const data = await res.json();
                btn.parentElement.remove();
                loadSelectedVocabulary(data);
            }
        }

        async function removeItem(vocabulariesListId, vocabularyId, btn) {
            const res = await fetch("/api/vocabularies/remove", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                    vocabulariesListId: vocabulariesListId,
                    vocabularyId: vocabularyId
                })
            });

            if (res.ok) {
                btn.parentElement.remove();
            }
        }

        async function loadSelectedVocabulary(data) {
            const modelId = document.getElementById("vocabularies-list-id").value;
            const list = document.getElementById("added-vocabularies");
            list.innerHTML += `
                    <div class="d-flex justify-content-between align-items-center border p-3 m-2">
                        <div><b>${data.word}</b><br/><b>Description: </b>${data.description}</div>
                        <button class="btn btn-danger m-lg-2" onclick="removeItem(${modelId},${data.id}, this)">Remove</button>
                    </div>`;
        }
    </script>
}
